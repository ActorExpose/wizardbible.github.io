x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座・第23回 〜コミットメントスキーム〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　WB43〜WB47までは平方剰余という数学的概念や平方剰余仮定に基づく暗号技術
を紹介した。今回はまったく違った方向性の暗号技術を紹介するので、前回まで
の記事が読みにくくてよくわからなかった場合でも今回の記事は読めると思う。
　今回の記事の後半では離散対数問題の困難性について言及しているので、必要
に応じてWB33を復習してもらいたい。


■0x02.) コミットメントスキームとは

　今回取り上げるコミットメントスキーム（commitment scheme）は暗号技術のひ
とつである。様々な暗号技術が存在する中で、コミットメントスキームは複雑な
暗号技術を構成するときの道具の中で最も基本的なもののひとつという立場にあ
る。つまり、縁の下の力持ちのような存在といえるでしょう。

　コミットメントスキームの仕組みを直観的に言うと「ある値を約束しておいて、
ある時点以降その値を明かす」という暗号技術のことである（「コミットメント」
とは元々「約束」「委託」という意味を持つ）。あまりにも直観的すぎて逆にわ
かりにくいかもしれないので、コミットメントスキームにおけるやり取りをもう
少し具体的に見ていく。

      m
      ↓
--------------            --------------
|     S      |            |     R      |
| r←R       |            |            |
| c=Com(m;r) |     c      |            |
|            |----------->|            |
|            |            |            | COMMITフェーズ
=======================================================
|            |    m,r     |            | REVEALフェーズ
|            |----------->|  ?         |
|            |            | c=Com(m,r) |
|            |            |If 一致 then|
|            |            |  output m, |
|            |            |else        |
|            |            |     abort. |
--------------            --------------
                                ↓
                                m

　まず送信者Sと受信者Rがいて、この2者がコミットメントスキームを行うとする。
ここで、Comは一種の暗号化関数のようなもので、公開されているものとする。
　このときSがメッセージmをRに対して約束したいとする。するとSは乱数rを選択
し、c=Com(m;r)を計算する。この記号はComという関数にmとrを代入したと考えて
もらってよい。このcは暗号化関数の出力結果なのである意味暗号文のようなもの
である。このcをRに送信する。ここまでをCOMMITフェーズという。
　次に、ある時点以降になると、Sはm,rをRに送信する。Sは今受け取ったm,rから
Com(m;r)を計算し、その結果がCOMMITフェーズで受け取ったcと一致するかどうか
を検証する。もし一致すればmを出力し、そうでなければ停止する。ある時点から
ここまでをREVEALフェーズという。
　COMMITフェーズが終わってから、いきなりREVEALフェーズに入ってもコミット
メントスキームとしては問題ないが、実用上まったく意味がない。一般的には何
らかの別の仕事が終わってから、REVEALフェーズに入って、m,rがRに投げられる。
　最終的にREVEALフェーズが終われば、S,Rの両者がmを知ることができた。つま
り、約束した値mできちんと共有されたことが保障されるわけである。

　ちなみに、ここで具体的に示したやり取りはあくまで非対話型のコミットメン
トスキームの話である。非対話型とは通信のやり取りが一方通行のものである。
非対話型に対して対話型というものもあるが、これは通信のやり取りが双方向の
ものである。
　対話型のコミットメントスキームも存在するが、ここでは単純な非対話型なコ
ミットメントスキームの仕組みを紹介した。なお、対話型のコミットメントスキ
ームも同様にして定義できる。


■0x03.) コミットメントスキームの応用例

　このコミットメントスキームの応用例として、仕事の発注先を決定する入札シ
ステムを考えた。この入札システムには以下のルールが設けられているとする。

(1) 入札者は入札値を隠した状態で、発注者に預ける。
(2) 入札者は何回も入札できるが、最終的に一番高い入札値のみが自分の入札値
として認識される。
(3) 入札値は期日まで伏せられており、他の入札者だけでなく仕事の発注者にも
わからないものとする（なぜならば発注者が入札値を知ってしまったら、懇意の
入札値の低い相手に対して、「あなたは今最高入札値ではないから、入札値を○
円の額よりも上げる必要がある」と助言してしまうかもしれない。こうすること
で、懇意の入札者が最終的に落札できてしまうことになってしまう。これでは公
平なシステムではない）。
(4) 期日を越えると入札値の比較が行われて、入札値が一番高い入札者が仕事を
引き受けることができる。

　この入札システムは一種の匿名オークションのようなものと言えるだろう。で
は、この入札システムを実現するためにはどうしたらよいだろうか？

　例えば、公開鍵暗号方式を素朴に用いてこの入札システムを実現できるか考え
てみる。入札者は公開鍵暗号方式の暗号化アルゴリズムを用いて（暗号化アルゴ
リズムに入札値と受信者の公開鍵を入力する）、入札値を暗号化する。この暗号
化された入札値を発注者に送信する。他の入札者がこの通信を盗聴したとしても、
暗号化されているので入札値が漏れて不利になることはない。しかし、発注者は
自分の秘密鍵と用いて、いつでも暗号文を復号できてしまう。これはルール(3)に
反しているので、公開鍵暗号方式を素朴に使った方法ではこの入札システムを実
現できない。

　次に、共通鍵暗号方式を素朴に用いてこの入札システムを実現できるか考えて
みる。入札者は入札値を共通鍵（ただしまだ発注者とは共有していない）で暗号
化する。そして、入札の期日後に、入札者は入札値（＝平文）と共通鍵を発注者
に送信する。この仕組みのときに、不正な入札者は入札期日時に、暗号化に利用
した入札値と共通鍵の組を正直に送るとは限らない。例えば、他の入札者が発注
者に入札値と共通鍵の組を送信しているので、それを盗聴することで、ライバル
入札者の入札値を知ることができる。その入札値よりも自分の入札値が小さけれ
ば、なんとかライバル入札者の入札値よりも高い入札をしたように、発注者を騙
したい。そこで、共通鍵暗号方式の復号アルゴリズムに自社の入札値の暗号文と
適当な共通鍵を入力する。すると、対応する平文が出力される。この平文の値が
ライバル入札者の入札値よりも高ければ、復号アルゴリズムの入力で利用した共
通鍵とその出力結果を発注者に送信すればよい。もし、そうでなければまた別の
共通鍵を生成して、それを利用して同様のことを行えばよい。何回か繰り返せば、
落札を決定付けるような平文を得ることができるだろう。
　特に共通鍵暗号方式がバーナム暗号のように暗号化アルゴリズムが平文と共通
鍵のXOR演算のように単純だった場合は、上記のようなことをせずともライバル落
札者の落札値に+1した値（なぜこの値を採用したのかというと、最も安い値段で
自社が落札できるから）を自分の落札値にしてしまうことは簡単である。「（自
社が送信しておいた落札値の暗号文）＝（ライバル落札者の落札値に+1した値）
XOR（つじつまを合わせるための共通鍵）」を満たすような共通鍵を計算すればよ
い。そのためには単に「（自社が送信しておいた落札値の暗号文）XOR（ライバル
落札者の落札値に+1した値）」を計算しればすむ。
　よって、共通鍵暗号方式を素朴に用いてしまうと、入札者が不正できてしまう
のである。

　以上をまとめると、素朴に公開鍵暗号方式や共通鍵暗号方式を利用して、この
匿名オークションは参加者全員が安心して使うことができないことがわかった（
上記で考えたような素朴な方法以外ではあるかもしれない）。つまり、誰かが有
利になってしまい、フェアな取引が成立しないということになる。結局、全員が
安心して使えるような入札システムを実現するにはどうしたらよいだろうか。
　その解決方法のひとつとして、コミットメントスキームを採用すればよさそう
である。


■0x04.) コミットメントスキームの定義

　コミットメントスキームは次の2つの性質（安全性）を必ず持つ。

　1つ目が秘匿性（hiding）である。
　これはCOMMITフェーズにおいて、cからmの情報が（部分情報でさえも）漏れて
いないということである。即ち、任意の確率的多項式アルゴリズムがCom(m;r)と
Com(m';r')が識別できない（m≠m'またはr≠r'）。
　入札システムの例で言うと、COMMITフェーズにおいては発注者は入札値を知る
ことは不可能ということである。

　2つ目が束縛性（binding）である。
　これはREVEALフェーズにおいて、約束（コミット）した値であるm以外を送って
も、検証式が成り立たないため、受信者は検知できる。即ち、任意の確率的多項
式時間アルゴリズムがc=Com(m;r)=Com(m';r')を満たす(c,(m,r),(m',r'))を生成
できない（ただし、m≠m'）。
　入札システムの例で言うと、COMMITフェーズにおいて1億円で約束しておいたの
に、REVEALフェーズにおいて1億5千万円で受理させようとしてもできないという
ことである。

　この2つの性質があれば、0x02で紹介した匿名システムを安全に実現できる。

　秘匿性は受信者の力を制限するものであり、束縛性は送信者の力を制限するも
のである。送信者と受信者の両者の力のバランスを取るという考え方は安全な暗
号プロトコルを実現するために重要である。互いに牽制しあいつつ、満たすべき
サービスを実現するのである。

　暗号化の安全性の世界では、送受信者とは別の第三者が暗号文を盗聴し、その
対応する平文が漏れないことが議論の対象となる。一方、暗号プロトコルの世界
では、敵が第三者とは限らず、送信者・受信者のどちらかが敵である可能性があ
るのである。プロトコルの仕様通りに動く限りは敵であってもサービスをきちん
と提供できていなければならない。つまり、暗号プロトコルを構築するときは敵
が存在したとしても、サービスを実現しつつ、サービスの不正をできない仕組み
になっている必要があるのである。コミットメントスキームの場合も同様である
（プロトコルを強調するときはコミットメントプロトコルという）。


■0x05.) Pedersen's scheme

　コミットメントスキームの具体例として、Pedersen's schemeを紹介する。この
スキームは離散対数ベースのコミットメントスキームである。

　記号の定義をしておく。
　p,qを素数（ただし、q|p-1）とする。gはg^q≡1 mod pを満たす値とする。Com
(m;r):=g^m・h^rとする。

　まずPedersen's schemeを実行する準備として、次の手順を行う。

1：sをZ_q^*からランダムに選択する。

2：h=g^sを計算する。

3：(p,q,g,h)を送信者Sと受信者Rの両者に対する公開情報（CRSという）とする。

　その後で、SとRは次のようなやり取りをする。

1：CRSの(p,q,g,h)はS,Rに入力される。

2：Sはm（∈Z_q）をコミットしたいとする。このとき、Z_q^*からrをランダムに
選択し、c=Com(m;r)=g^m・h^r mod qを計算する。この計算結果のcをRに送信する。
　ここまでがCOMMITフェーズである。

3：REVEALフェーズでは、Sがm,rをRに送信する。

4：RはCOMMITフェーズで得たcと、REVEALフェーズで得たm,rを使って、c=Com(m;r)
（即ち、c≡g^m・h^r mod q）という検証式が成り立つかどうかを検証する。もし
成り立てばmを出力し、そうでなければ終了する。

　以上がPedersen's schemeのS,Rのやり取りになる。

　補足になるが、CRSは信頼できる第三者がS,Rに送信してもよいし、公開掲示板
と考えてもよい。
　準備で生成したgはmod pの世界で位数がqの値である。
　CRSとして、(p,q,g)が与えられるということは、位数がqの乗法群G（≦Z_p^*）
が共有されているのと同じである。


■0x06.) Pedersen's schemeの安全性

　それではPedersen's schemeがコミットメントスキームあることを確かめる。
コミットメントスキームあるための必要条件が秘匿性と束縛性であったので、こ
の2つの性質を満たすことを確認できればよい。

　まず秘匿性を持つことを確認する。
　Pedersen's schemeのコミットメント情報はc=g^m・h^r=g^(m+sr)である（sはg
,hの離散対数、即ちs=log_g(h)）。ここでrはZ_q^*上から一様ランダムに選ばれ
ているので、cはG上を一様分布している。
　仮に、秘匿性を破ろうとする敵が無限の能力（指数時間の計算が可能）を持っ
ていたとする。すると離散対数問題を破ることができるので、gの肩のm+sr mod q
を知ることができる。しかし、rがわからないので、mを確定できない。つまり、
秘匿性を持つ。
　無限の能力を持つ敵であっても秘匿性を維持できるので、完全な秘匿性（perf
ect hiding）を持つという。

　次に束縛性を持つことを確認する。
　いつもの帰着法を用いる。束縛性を破る敵Aが存在するとする。このときAの入
力は(g,h,p,q)、Aの出力はc=g^m0・h^r0=g^m1・h^r1を満たす(c,(m0,r0),(m1,r1))
の組である。Aを利用して、離散対数問題を解くアルゴリズムBが構成できればよ
い。
　Bには(g,h,p)を入力とする。Bはq|p-1を満たすqを選び、Aに(g,h,p,q)を入力す
る。すると、Aはc=g^m0・h^r0=g^m1・h^r1を満たす(c,(m0,r0),(m1,r1))が出力さ
れる。Bはこの情報を利用して、(r1-r0)/(m0-m1) mod qを計算して、計算結果を
出力する。
　h=g^{(r1-r0)/(m0-m1) mod q} mod pを満たすため、Bの出力はg,hの離散対数と
なっている。つまり、離散対数問題を解くアルゴリズムが構成できた。この事実
は、確率的多項式時間アルゴリズムは離散対数問題を解くことが困難であること
に矛盾する。ゆえに、Aは存在しない。
　ゆえに、束縛性を持つ。Aは確率的多項式時間アルゴリズムであったので、厳密
には計算量的な束縛性（computationally binding）を持つと言える。

　以上によって、Pedersen's schemeはコミットメントスキームであることが確認
できた。


■0x07.) Pedersen's schemeを利用した入札システム

　コミットメントスキームであるPedersen's schemeを利用すれば、参加者全員が
フェアである入札システムを本当に実現できるだろうか？結論から言えば、まだ
実現できないのである。

　敵が別の送信者や受信者に成りすますという攻撃がある。コミットメントスキ
ームのやり取りの場合で言えば、敵Aが送信者Sに対して受信者Rになりすましたり、
Rに対してはSとしてなりすますといった攻撃である。このような攻撃を中間者攻
撃という。

　中間者攻撃を行う敵を想定した場合（実は中間者攻撃ができない普通の敵であ
っても十分）、Pedersen's schemeを利用した入札システムは敵が安全性を破って
しまう。

      m
      ↓
--------------            --------------            -------------------
|     S      |            |     A      |            |       R         |
| r←R       |            |            |            |                 |
| c=Com(m;r) |     c      |            |            |                 |
|            |----------->| c^*=c×g   |    c^*     |                 |
|            |            |            |----------->|                 |
|            |            |            |            |                 |
==========================================================================
|            |    m,r     |            |            |                 |
|            |----------->|            |            |                 |
|            |            | m^*=m+1    |            |                 |
|            |            | r^*=r      |  m^*,r^*   |                 |
|            |            |            |----------->|   ?             |
|            |            |            |            |c^*=Com(m^*,r^*) |
|            |            |            |            |  必ず一致       |
--------------            --------------            -------------------
                                                             ↓
                                                            m^*

　ライバル入札者が送信する入札値の暗号文c=Com(m;r)の計算結果のcを敵Aが盗
聴する。そして、c^*=c×g mod pを計算し、その計算結果c^*を発注者に送信する。
　そして、入札締め切り後、ライバル入札者は発注者に(m,r)を送信する。Aはそ
れを盗聴し、m^*=m+1 mod q,r^*=rとし、発注者に(m^*,r^*)を送信する。
　すると、Aは必ずライバル入札者よりもたった1円高い入札値で必ず落札できる。
つまり、敵が必ず落札できるということは、入札システムとして安全ではない。


■0x08.) 中間者攻撃と頑強性

　中間者攻撃に対しても耐性がある入札システムにするためには、コミットメン
トスキームに新たにどのような安全性を追加すればよいだろうか。
　中間者攻撃における攻撃とは、mと関係のあるm^*を生成し、それで受信者に受
理させること、即ち検証式を成り立たせることである（Pedersen's schemeに対す
る中間者攻撃ではm^*=m+1という関係を持つ）。つまり、中間者攻撃に対して安全
であるためには、cやmを受け取っても、c^*やm^*を生成するのに有効に働かない
ことである。つまり、mはm^*と関係がないということである。この中間者攻撃に
対する安全性は頑強【がんきょう】性（Non-Malleability：NM）という。
　公開鍵暗号方式の安全性にもNM（IND≦NM。INDよりも強い安全性という意味）
というものがあったが、直観的にはそのコミットメントスキーム版だと思えばよ
い。

　頑強性を満たすコミットメントスキームとして、Pass,Rosenの衝突困難なハッ
シュ関数族が存在するという仮定に基づくコミットメントスキームや、Damgard,
Nielsenのp-部分群仮定に基づくコミットメントスキーム（複数の送受信者が参加
する状況における頑強性を満たす。これをコンカレントな頑強性という）などが
知られている。
　コンカレントな頑強性を持つコミットメントスキームを使えば、安全な入札シ
ステムを実現できる。


■0x09.) 終わりに

　今回はコミットメントスキームの最もよく知られたPedersen's schemeを紹介し
た。また、提供するサービスによってはPedersen's schemeの満たす性質だけでは
不十分であることを示した。
　次回はコミットメントスキームの別の応用例であるコイン投げプロトコルか、
別のコミットメントスキーム（今回は離散対数ベースだったので、次回はQR仮定
に基づくものがよさそう）を紹介したい。



