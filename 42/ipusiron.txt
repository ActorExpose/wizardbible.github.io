x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座・第17回 〜Rabin暗号〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　前回は拡張ElGamal暗号を紹介した。今回は引き続いて公開鍵暗号の一種である
Rabin暗号を紹介する。


■0x02.) 数学的準備

　すでに解説した数学的概念もありますが、特に重要なものを改めて解説してお
く。

●Z_N

　Zは整数の集合であり、Z_Nと書いた場合は法をNとしたときのZの集合である。
つまり、Z_N={0,1,2,…,N-1}である。

●GCD

　GCD（Greatest Common Division）は、最大公約数を意味する。aとbの公約数と
いった場合はaとbに共通する約数のことであり、GCD(a,b)はその中でも最大の約
数のことである。
　例えば、GCD(12,10)は2である。なぜならば12=2・2・3、10=2・5であり、12と
10の公約数は2しか持たないからである。

　ユークリッドの互除法と呼ばれる有名なアルゴリズムを用いることで、機械的
にGCDを計算することができる。

●CRT（中国人剰余定理）

　m1,m2,…,m_r：各々が互いに素、a1,a2,…,a_r∈Zとする。
　このとき、次のr個の合同式を満たすxはM=Π[i=1;r]m_iを法としてただひとつ
だけ存在する。

x≡a1 (mod m1)
x≡a2 (mod m2)
…
x≡a_r (mod m_r)

　さらに、M_i=M/m_i、y_i=(M_i)^(-1) (mod m_i) (i=1,…,r)とすると、その解
xは次の通りになる。

x≡Σ[i=1;r]a_i(M_i・y_i) (mod M)

　以上がCRTである。m1,m2,…,m_rが互いに素であるときのみにCRTを用いること
ができることに注意して欲しい。

　ここでは解の存在と解の一意性の証明は省き、数値例を示す。

例：x≡1 (mod 3)、x≡2 (mod 5)、x≡3 (mod 7)の連立合同式を計算する。

m1=3,m2=5,m3=7とおく。
m1〜m3がいずれも互いに素であるから、CRTを用いることができる。

M=m1・m2・m3=3・5・7=105

M1=M/m1=m2・m3=35
M2=M/m2=m1・m3=21
M3=M/m3=m1・m2=15

y1=(M1)^(-1) mod m1=35^(-1) mod 3=2^(-1) mod 3=2 mod 3
y2=(M2)^(-1) mod m2=21^(-1) mod 5=1 mod 5
y3=(M3)^(-1) mod m3=15^(-1) mod 7=1 mod 7

M1・y1=35・2=70
M2・y2=21・1=21
M3・y3=15・1=15

x=a1・M1+a2・M2＋a3・M3=1・70+2・21＋3・15=70+42+45 mod M≡52 mod 105

●x=[a,b]

　p,qを素数、N=pqとする。このとき「x≡a (mod p)」かつ「x≡b (mod q)」を満
たすx∈Z_Nを、x=[a,b]と記述する。

　x=[a,b]を具体的に求めるためには、CRTを用いればよい。


■0x03.) Rabin暗号の定義

　公開鍵暗号は鍵生成アルゴリズム・暗号化アルゴリズム・復号アルゴリズムの
3つのアルゴリズムで構成されるということはWB34で説明した。今回紹介するRab
in暗号も公開鍵暗号の一種なので、3つのアルゴリズムから構成される。

●鍵生成アルゴリズム（KeyGen）

1：セキュリティパラメータ1^kを入力とする。

2：大きな素数p,qを生成する。

3：N=pqを計算する。

4：pk=N、sk=(p,q)を出力する。

●暗号化アルゴリズム（Enc）

1：pk=N、m∈Z_Nを入力とする。

2：c≡m^2 (mod N)を計算する。

3：cを出力する。

●復号アルゴリズム（Dec）

1：sk=(p,q)、c=m^2を入力とする。

2：x^2≡c (mod p)、x^2≡c (mod q)の平方根を求める。ここでは計算結果をx≡
±a (mod p)、x≡±b (mod q)とおく。

3：M1=[a,b]、M2=[a,-b]、M3=[-a,b]、M4=[-a,-b]を計算する。

4：M1〜M4のいずれかを出力する。

●補足

　以上で定義した3つのKeyGen,Enc,DecがRabin暗号の定義である。定義とは別と
して、補足したいことがある。

　KeyGenのステップ1におけるセキュリティパラメータとは、ビット長を決めるも
のである。kではなく、1^kを入力とする理由については、各アルゴリズムはチュ
ーリングマシンと呼ばれるモデルで考えていることに大きく関係する。ここでは
チューリングマシンについては紹介しないため、KeyGenの入力は単にビット長（
2進数の世界の桁数）を意味していると認識してもらえればよい。
　KeyGenのステップ2において、p,qは単に大きな素数とのみ指定している。本に
よっては、もっと制限された素数を用いている場合もある。ここでは最も基本的
なRabin暗号の紹介をしたいため、シンプルな素数の選び方にした。
　KeyGenのステップ4におけるpkは公開鍵、skは秘密鍵である。

　Encのステップ1におけるmは平文、ステップ3におけるcは暗号文である。つまり、
公開鍵pkと平文mで暗号文cを計算していることがわかる。

　Decのステップ2において、2つの合同方程式の平方根を求める必要がある。素数
を法とした場合は効率的に平方根が計算可能であることが知られているので、こ
れは効率的に計算可能である。
　Decのステップ3における4つの計算は、それぞれに対してCRTを適用させればよ
い。
　Decのステップ4において平文がM1〜M4のように4つ計算される。M1〜M4のいずれ
かが妥当な平文mであるが、妥当な平文に絞り込むためには別の仕組みの助けが必
要とされる。その仕組みに関する考察はは後述する。


■0x04.) Rabin暗号 vs. RSA暗号

　WB34において（教科書的）RSA暗号を紹介した。ここではRabin暗号とRSA暗号を
比較してみる。

●アルゴリズム

　復習になるが教科書的RSA暗号の暗号文はm^e (mod N)であった。一方、Rabin暗
号の暗号文はm^2 (mod N)である。これだけの比較によれば、Rabin暗号はe=2の場
合のRSA暗号と思える。しかし、そうではない。なぜならば、KeyGenに注目しても
らえばよい。教科書的RSA暗号のKeyGenにおいて、「GCD((p-1)(q-1),e)=1」を満
たすeを生成している。つまり、常に「GCD((p-1)(q-1),e)=1」が成り立っている
ということである。p,qは素数なので、奇数である。
　よって、p-1,q-1はどちらも偶数である。(p-1)(q-1)も偶数になることを踏まえ
ると、e=2のときに「GCD(e,(p-1)(q-1))=1」は成り立たない。ゆえに、Rabin暗号
は教科書的RSA暗号の特殊ケースというわけでもないことがわかる。
　そして、Rabin暗号のDecでは2次合同式である「c≡m^2 (mod N)」（N=pq）は4
つの解が計算される。しかし、「GCD(e,(p-1)(q-1))≠1」であるために4つから1
つに絞り込めないのである。

●安全性

　教科書的RSA暗号は、RSA仮定の下でOW-CPA安全である。OW-CPAという表記につ
いてはWB40を参照して欲しい。
　一方、Rabin暗号は、大きな桁の合成数の場合は素因数分解が困難であるとい
う仮定（以降、素因数分解困難仮定と呼ぶことにする）の下でOW-CPA安全である。
Rabin暗号（1979年）はRSA暗号（1977年）の提案後に発表されたが、実は安全性
証明が付いた初の公開鍵暗号である。

　RSA暗号と素因数分解困難仮定を比較すると、後者の方が弱い仮定である。仮定
は弱い方が嬉しいと、WB39で紹介した。つまり、Rabin暗号とRSA暗号は安全性の
みでみるとOW-CPA安全と同じであり、仮定で見るとRabin暗号の方がより理想的と
いえる。

●効率性

　教科書的RSA暗号のEncでは、m^eを計算する。つまり、mod nの世界における平
方計算と乗算計算が必要とされる。この計算はWB35で紹介したべき乗計算のアル
ゴリズムが利用される。これにより、単純に乗算するよりも効率的に計算できる。
　一方、Rabin暗号のEncでは、m^2を計算する。つまり、mod nの世界における平
方計算だけで済む。
　よって、暗号化に関しては、Rabin暗号の方が高速と言える。

　教科書的RSA暗号のDecでは、c^dを計算する。つまり、mod nの世界における平
方計算と乗算計算が必要とされる。
　一方、Rabin暗号のDecでは、x^2≡c (mod p)、x^2≡c (mod q)の平方根、そし
てCRTの計算が必要である。

　ところで、KeyGenで生成されるp,qを単純に大きな素数とするのではなく、p,q
を法4の世界で3になる素数（Blum数を構成するp,q）にすると、復号が早くなると
いう。

●特徴

　Rabin暗号は一意性の問題が存在する。暗号文であるc mod nを復号すると、4つ
の平方根が求まり、その4つのうちの1つが正しい平文mになる。正しい平文を特定
するにはいくつかの方法が存在する。
　平文を特定する最も素朴な方法は、復号して得られた4つの値の内容を読み取り、
正しい文章を選ぶという方法である。しかし、正しい文章であるかを自動的に識
別するというのは一般には難しい。しかも、確実性がない。それだけではなく、
平文そのものは言語として意味を成すとは限らない。例えば、公開鍵暗号を共通
鍵暗号での暗号化で用いる鍵を、公開鍵暗号で通信者の間において共有するとい
う場合もありうる（いわゆるハイブリッド暗号）。この場合は、公開鍵暗号の暗
号化アルゴリズムに入力される平文は鍵（セッション鍵）なので、一種の乱数の
ようなものなので、意味のある文章を形成するわけがない。
　次に考えられる方法としては、平文に特殊な構造を入れることである。例えば、
固定のフラグを含むようにしたり、平文の最後の64ビットをその直前の64ビット
と同じにするなどである。しかし、この方法をRabin暗号の平文としてしまうと、
確かに一意性の問題は解決されるが、素因数分解問題と同値性がまったくなくな
る。つまり、素因数分解困難仮定であっても、安全性が保障されなくなってしま
うということである。
　最もよい解決策は、一意性の問題を解決したWillams暗号を使うことである。W
illiams暗号については次回のWBで紹介する予定である。


■0x05.) Rabin暗号の安全性

●OW-CPA安全

　OW-CPA攻撃者がRabin暗号を解くことと、素因数分解問題を解くことは同値であ
るが知られている。つまり、Rabin暗号は素因数分解仮定の下でOW-CPA安全である。
この事実を帰着法で証明する。

[定理]OW-CPA攻撃者がRabin暗号を解くことと、素因数分解問題を解くことは同値
である。

[証明]まずAをNとcから平文の候補mを効率的に出力する、即ちOWを破る（暗号文
cから平文mを完全に求める）アルゴリズムとする。BをNを効率的に素因数分解す
るアルゴリズムとする。

[1]Bが存在する⇒Aが存在する

　Bの力を利用してAを構成することができればよい。
　AはN,cが入力される。内部のBに対してNを与える。するとBはp,qを出力するの
で、Aはp,qを知ることができる。p,qを知ることができれば、Rabin暗号のDecを利
用できるので、cからmを出力できる。

[2]Aが存在する⇒Bが存在する

　Aの力を利用してBを構成することができればよい。
　BはNが入力される。BはZ_Nから一様ランダムにm'を選択し、c=(m')^2 mod Nを
計算する。そして、内部のAに対してNとcを入力する。このcはhonestに暗号文を
作ったときと同じ作り方であるため、AはBの内部に存在することに気づきようが
ない。よって、Aはmを出力する。
　Bはmを知ることができ、GCD(m'-m,N)を計算して出力する。

　m'=[a,b]とすると、c=(m')^2 mod N=[a^2,b^2]になる。Aが出力するmはcの平文
候補の1つなので、mは次の4つのm1〜m4のいずれかになっている。

・m1=[a,b]
・m2=[-a,b]
・m3=[a,-b]
・m4=[-a,-b]

(i)m=m1=[a,b]のとき、m'-m1=[a,b]-[a,b]=[0,0]を求める。
　つまり、m'-m1≡0 mod pかつm'-m1≡0 mod qを満たすm'-m mod Nを求める。
　p,qは素数なので、明らかに互いに素であり、CRTによりm'-m mod Nを求めるこ
とができる。

　ここからはCRTの説明で使った記号を一時的に使うことに注意。

M=m1m2

M1=M/m1=m2=q
M2=M/m2=m1=p

y1=(M1)^(-1) mod m1=q^(-1) mod p　←q^(-1)は計算せずにこのままで問題なし。
y2=(M2)^(-1) mod m2=p^(-1) mod q

x=a1・M1・y1+a2・M2・y2 mod M

　以上で準備ができた。これを定理の証明内で使っている記号に置き換えると次
のようになる。

m'-m1=0・q・q^(-1)+0・p・p^(-1) mod N=0+0=0
m'-m1=Nr (∀r∈Z)

　よって、GCD(m'-m,N)=GCD(Nr,N)=N

(ii)m=m2=[-a,b]のとき、m'-m=[a,b]-[-a,b]=[2a,0]を求める。
　つまり、m'-m≡2a mod pかつm'-m≡0 mod qを満たすm'-m mod Nを求める。(i)
と同様にCRTを使って求めると次のようになる。

m'-m2=2a・q・q^(-1)+0・p・p^(-1) mod N=2a・q・q^(-1)

　よって、GCD(m'-m,N)=GCD(2a・q・q^(-1),pq)=q

(iii)m=m3=[a,-b]のとき、m'-m=[a,b]-[a,-b]=[0,2b]を求める。
　つまり、m'-m≡0 mod pかつm'-m≡2b mod qを満たすm'-m mod Nを求める。(i)
と同様にCRTを使って求めると次のようになる。

m'-m3=0・q・q^(-1)+2b・p・p^(-1) mod N=2b・p・p^(-1)

　よって、GCD(m'-m,N)=GCD(2b・p・p^(-1),pq)=p

(iv)m=m4=[-a,-b]のとき、m'-m=[a,b]-[-a,-b]=[2a,2b]を求める。
　つまり、m'-m≡2a mod pかつm'-m≡2b mod qを満たすm'-m mod Nを求める。(i)
と同様にCRTを使って求めると次のようになる。

m'-m4=2a・q・q^(-1)+2b・p・p^(-1) mod N

　よって、GCD(m'-m,N)=GCD(2a・q・q^(-1)+2b・p・p^(-1),pq)=1

　以上の(i)〜(iv)をまとめると次の結果になった。

-----------------------
| m'-m  | GCD(m'-m,N) |
|-------+-------------|
| m'-m1 | N           |
|-------+-------------|
| m'-m2 | q           |
|-------+-------------|
| m'-m3 | p           |
|-------+-------------|
| m'-m4 | 1           |
-----------------------

　よって、Aがmをm1〜m4をそれぞれ1/4で出力するとき、Bが素因数分解に成功す
る（Bの出力がpありはqになる）確率は、Aの成功確率の4分の1になる。

　したがって、A,Bの成功確率をそれぞれAdv(A),Adv(B)と表記すると、

Adv(B)=Adv(A)/4

が成り立つ。

　つまり、Bが4回中に1回は素因数分解に成功することになり、十分大きな確率で
ある。ここでした議論は1/4の確率で成功するBの具体的な構成であった。もしか
したら、さらにうまいBの具体的な構成があるかもしれないので、一般にはAdv(B)
≧Adv(A)/4ということになる。実際にこれが正しいことを示すために、具体的に
別のBの構成法を紹介しよう。

[別証]改良版のBの構成法

　Aの力を利用してBを構成することができればよい。
　BはNが入力される。BはZ_Nから一様ランダムにm'を選択する。選択したm'がGCD
(m',N)=1を満たすかどうかを確認する。もしGCD(m',N)≠1ならば、m'はpかqを当
ててしまった状態である。このときはm'を出力すれば素因数になっている。一方、
もしGCD(m',N)=1ならば、次の操作に進む。
、c=(m')^2 mod Nを計算する。そして、内部のAに対してNとcを入力する。このc
は仕様通りに暗号文を作ったときと同じ作り方であるため、AはBの内部に存在す
ることに気付きようがない。よって、Aはmを出力する。
　Bはmを知ることができ、mがm'あるいは-m' mod Nであれば、もう一度cを作り直
してAを起動し直す。これをAが出力するmがm'あるいは-m' mod Nでない値になる
まで繰り返す。Bがm'あるいは-m' mod Nでない値を得ることができたら、GCD(m'
-m,N)を計算して出力する。

　以上で改良版のBの構成は完了である。基本はさきほどのBの構成と同じである。
　Bがm'を選択した時点で、GCD(m',N)≠1が成り立てば、m'=p,qのいずれかのとき
である（このときの状況をEventと呼ぶことにする）。よって、Bはm'をそのまま
出力すれば素因数分解に成功する。しかし、その確率は確率は無視できるほど小
さい。
　Aの出力mはm1〜m4のいずれかであった。そのうちm=m1,m4のときは従来のBは素
因数分解を解くことに失敗している。そこで、改良版のBはAの出力がm=m1または
m4であった時点で、また新しくAにmの生成をお願いするのである。失敗の度にAを
起動し直すため、いつかはm2あるいはm3を出力することを期待できる。
　これらの注意点を考慮して、改良版のBの成功確率を評価してみる。ここではA
への問い合わせ回数をkとする（セキュリティパラメータで使ったkとは別物なの
で注意）。

Adv(B) = Adv(A)(1-(1/2)^k) + Pr[Event]

　Pr[Event]=2/Nであり、無視できるほど小さい。

　したがって、次がBの成功確率として考えてよい。

Adv(B) = Adv(A)(1-(1/2)^k)

　k=1のときはAを1回だけ起動するときであり、このときは1/2の確率でしか素因
数分解が解けず、従来のBと同じ成功確率になっている。
　kの数が増えれば増えるほど、(1/2)^kは小さくなるので、1-(1/2)^kは大きくな
り、Adv(A)(1-(1/2)^k)も大きくなることがわかる。

　Rabin暗号が素因数分解仮定の下でOW-CPA安全であることが示されたことが証明
できた。次に知りたいのはOW-CPA安全よりも強い安全性を持つかどうかという点
である。OW-CPA安全に近い安全性として、OW-CCA安全とSS-CPA安全（IND-CPA安全
と等価なので、以後はIND-CPA安全で考える）であることはWB40の公開鍵暗号の安
全性の表よりわかる。
　結果から述べると、Rabin暗号はOW-CCA安全・IND-CPA安全でないことが知られ
ている。このことを直観的に考えてみよう。

●OW-CCA安全でない

　OW-CCA安全を破る攻撃者は暗号化オラクルを利用することができ、公開鍵とタ
ーゲット暗号文が与えられたときに、ターゲット暗号文の平文を求めることが目
標である。

　攻撃者Aにはpk=N、ターゲット暗号文c^*(=(m^*)^2 mod N)が入力される。
　Z_N上から一様ランダムにm'を選択して、c'=(m')^2 mod Nを計算する。このc'
を復号オラクルDOに送信する。すると復号オラクルはcの平文候補としてm~をAに
返信する。
　AはGCD(m~-m',N)を計算することで、確率1/2でNの素因数を確定できる。つまり、
Aは確率1/2でp,qを知ることができる。
　p,qを知ることができれば、秘密鍵を知っていることと同値であり、Decアルゴ
リズムを使って暗号文から平文を取り出すことがでｋりう。ただし、Decアルゴリ
ズムを使っても1/4でしか妥当なm^*を取り出せない。
　ゆえに、このように構成したAは1/8の確率でOWを破っていることになる。1/8の
確率は十分大きいため、Rabin暗号はOW-CCA安全ではない。

　ついでに別の攻撃者Aの構成も紹介する。
　攻撃者Aにはpk=N、ターゲット暗号文c^*(=(m^*)^2 mod N)が入力される。
　2^2をc^*に掛け算して、その計算結果をc'として復号オラクルに送信する（復
号オラクルにはターゲット暗号文を送信してはならないから、うまく細工をして
いる）。c'=(2^2)×(c^*)=(2m^*)^2が成り立つため、復号オラクルの返信は1/4の
確率で2m^*である。
　Aは2m^*を2で割れば、m^*になり平文を取り出すことができる。
　ゆえに、このように構成したAは1/4の確率でOWを破っていることになる。1/4の
確率は十分大きいため、Rabin暗号はOW-CCA安全ではない。

●IND-CPA安全でない

　IND-CPA安全を破る攻撃者は暗号化オラクルを利用することができ、チャレンジ
ャーが選んだbを推測することが目標である。

　攻撃者AにはNが入力荒れる。
　Z_N上から一様ランダムにm0,m1を選択して、(m0,m1)をチャレンジャーに送信す
る。すると1ビットのbをランダムに選択して、暗号文c=Enc(m_b)を計算する。そ
のcはチャレンジャーからAに返信されてくる。
　次に、m0,m1をそれぞれ暗号化オラクルに送信する。すると、c0,c1を知ること
ができる。
　そこで、c=c0が成り立つかどうかを確認する。もし成り立てばb=0、成り立たな
ければb=1であるころが100%の確率で識別できてしまう。ゆえに、Rabin暗号はIN
D-CPA安全ではない。

　実はこのような議論はRabin暗号に限らず、確定的暗号（暗号化時に内部で乱数
を使ってない暗号）ならばすべてにおいて言えることである。そのため、Rabin暗
号もRSA暗号もIND安全であることはない。


■0x06.) 終わりに

　次回はRabin暗号が持つ平文の一意性という課題を解決した暗号について紹介し
たいと思う。今回の記事にしている内容は厳密な議論というより、直観的な議論
が多い。しかしながら、直観的に妥当性が見出せなくては、厳密な議論ができる
はずがない。そのため、今回の記事のように試行錯誤感が強い直観的な議論をす
ることは無駄ではないと思う。

　では、また次号で会いましょう。



